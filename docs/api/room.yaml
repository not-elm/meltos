openapi: "3.0.2"
info:
  title: API Title
  version: "1.0"
servers:
  - url: https://api.server.test/
paths:
  /open:
    description: "open user"
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - "bundle"
              properties:
                user_id:
                  description: "ルーム内で使用されるユーザーID nullの場合はランダムなIDが作成される"
                  type: string
                  default: null

      responses:
        "200":
          description: "Room successfully opened."
          content:
            application/json:
              schema:
                type: object
                properties:
                  room_id:
                    type: string
                  user_id:
                    type: string
                  session_id:
                    type: string
                required:
                  - "room_id"
                  - "user_id"
                  - "session_id"

  /{room_id}/join:
    description: "join the join"
    post:
      parameters:
        - $ref: "#/components/parameters/room_id"

      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: string
                  description: "ルーム内で使用されるユーザー名"
                  default: null

      responses:
        "200":
          description: "Roomに正常に参加した"
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_id:
                    type: string
                  session_id:
                    type: string
                  bundle:
                    $ref: "bundle.yaml"
                required:
                  - "user_id"
                  - "session_id"
                  - "bundle"

  /{room_id}/tvn/fetch:
    get:
      parameters:
        - $ref: "#/components/parameters/room_id"
        - in: query
          name: branch
          schema:
            type: string
            default: null
            example: main
          description: 取得対象のブランチ名 nullの場合すべてのブランチが対象になる

      responses:
        "200":
          description: 取得対象のブランチに関連するTvnデータ
          content:
            application/json:
              schema:
                type: object
                properties:
                  bundle:
                    $ref: "bundle.yaml"
      security:
        - cookieAuth: []

components:
  parameters:
    room_id:
      in: path
      name: room_id
      schema:
        type: string
        description: "参加するルームのID"
      required: true

  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: session_id
